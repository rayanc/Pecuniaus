@model IEnumerable<Pecuniaus.Collection.Models.InActiveContracts>
@using GridMvc.Html
@if (Model != null)
{
    @Html.Grid(Model).Named("grdRNCInActiveContracts").Columns(columns =>
    {
        columns.Add(data => data.merchantId, true);
        columns.Add(data => data.merchantName).Titled(@Pecuniaus.Resources.Collection.Collection.MerchantName);
        columns.Add(data => data.creationDate).Titled(@Pecuniaus.Resources.Collection.Collection.CreationDate);
        columns.Add(data => data.lastDateofEvaluation).Titled(@Pecuniaus.Resources.Collection.Collection.LastDateofEvaluation);
        columns.Add(data => data.requestedCCVolumes).Titled(@Pecuniaus.Resources.Collection.Collection.RequestedCCVolumes);
        columns.Add(data => data.volumeStatus).Titled(@Pecuniaus.Resources.Collection.Collection.VolumeStatus);
        columns.Add().Titled(@Pecuniaus.Resources.Collection.Collection.RequestProcessor).Sanitized(false).Encoded(false).RenderValueAs(o => RenderActionLinks(o));
    }).WithPaging(5).Sortable()
     @helper RenderActionLinks(Pecuniaus.Collection.Models.InActiveContracts m)
{
     <button type="button" class="btn btn-primary" onclick="SendRequesttoProcessor(@m.merchantId);">@Pecuniaus.Resources.Collection.Collection.RequestProcessor</button>
    
}
}
<script>
    function SendRequesttoProcessor(id) {
         $.ajax({
            type: "POST",
            url: "/Workflow/SendRequesttoProcessor",
            dataType: "json",
            data: { merchantId: id },
            success: function (data) {
                alert('Succesfully sent the request ');
                //$('<b>Successfully updated</b>').appendTo('#divmessage');
            },
            error: function (ex) {
              //  alert(ex);
            }
        });
        return false;
    }

   
</script>