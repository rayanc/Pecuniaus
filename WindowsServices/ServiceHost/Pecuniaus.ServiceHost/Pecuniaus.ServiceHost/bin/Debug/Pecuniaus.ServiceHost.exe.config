<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
    <section name="ServiceHost.appSettings" type="System.Configuration.NameValueFileSectionHandler" />
    <section name="ConnectionString.appSettings" type="System.Configuration.NameValueFileSectionHandler" />
    <section name="Pecuniaus.SalesForce" type="System.Configuration.NameValueFileSectionHandler" />
    <section name="Pecuniaus.Processor" type="System.Configuration.NameValueFileSectionHandler" />
    <section name="Pecuniaus.ProcessTask" type="System.Configuration.NameValueFileSectionHandler" />
  </configSections>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="file" xsi:type="File"
				  layout="${longdate} ${logger} ${message}"
				  fileName="${basedir}/logs/logfile.html"
				  archiveFileName="${basedir}/archives/log.{#####}.html"
				  archiveAboveSize="1048576"
				  archiveNumbering="Sequence"
				  concurrentWrites="true"
				  keepFileOpen="false"
				  encoding="iso-8859-2" />

      <target xsi:type="Database" name="database" dbProvider="sqlserver">
        <connectionString>Data Source=192.168.10.15;Initial Catalog=Viamolog;User ID=dev2008;Password=12345678</connectionString>
        <commandText>
          INSERT INTO dbo.Logs (Message, Level, CreatedOn) VALUES (@message, @level, @createdOn);
        </commandText>
        <parameter name="@message" layout="${message}" />
        <parameter name="@level" layout="${level}" />
        <parameter name="@createdOn" layout="${date:format=yyyy\-dd\-MM HH\:mm\:ss}" />
      </target>

    </targets>

    <rules>
      <logger name="*" minlevel="Debug" writeTo="file" />
      <!--<logger name="*" minlevel="Info" appendTo="database"/>-->
    </rules>

  </nlog>
  <Pecuniaus.SalesForce>
    <add key="TimeInterval" value="10" />
  </Pecuniaus.SalesForce>
  <Pecuniaus.ProcessTask>
    <add key="TimeInterval" value="10" />
  </Pecuniaus.ProcessTask>
  <Pecuniaus.Processor>
    <add key="TimeInterval" value="10" />
  </Pecuniaus.Processor>
  <ServiceHost.appSettings>
    <!--can install multiple instanace of this service with following cammand
            sc create Pecuniaus.ServiceHost start= auto binPath= "D:\Projects\Backup06102014\Project\WindowsServices\ServiceHost\Pecuniaus.ServiceHost\Pecuniaus.ServiceHost\bin\Debug\Pecuniaus.ServiceHost.exe" DisplayName= Pecuniaus.ServiceHost
            [uninstall]
            sc delete Pecuniaus.ServiceHost
            -->
    <!--Path of assemblies to be picked by service and execute it-->
    <add key="AssemblyFolderPath" value="D:\Projects\SVNAVZ\WindowsServices\ServiceHost\Pecuniaus.ServiceHost\Pecuniaus.ServiceHost\Include"/>
    <add key="LogFilePath" value="D:\Projects\Backup06102014\Project\WindowsServices\ServiceHost\Pecuniaus.ServiceHost\Pecuniaus.ServiceHost\serviceLog\"/>
    <add key="WriteLog" value="true"/>
    <add key="SequencialXmlFilePath" value="D:\Projects\Backup06102014\Project\WindowsServices\ServiceHost\Pecuniaus.ServiceHost\Pecuniaus.ServiceHost\Sequential.xml"/>
    <!--tmrSequential in seconds-->
    <add key="tmrSequential" value="60"/>
    <!--ExecutionMode 
            1:Sequential 
            2:Parallel    
            -->
    <add key="ExecutionMode" value="2"/>

  </ServiceHost.appSettings>
  <appSettings>
    <add key="ConnectionStringName" value="AVZ" />
    <add key="ftpPathRead" value="D:\Files"/>
    <add key="ftpPathWrite" value="D:\Projects\SVNAVZ\WindowsServices\ProcessorFiles"/>
    <add key="retryCount" value="5"/>
  </appSettings>
</configuration>
